version: '3.7'

services:
  gateway:
    build:
      context: ./
      dockerfile: Dockerfile
    image: nodejs-gateway
    container_name: nodejs-gateway
    command: npm start
    volumes:
      - ./:/usr/src/app
      - /usr/src/app/node_modules
    depends_on:
      - mysql
    ports:
        - "4000:4000"
    env_file: ./.env
    environment:
      - NODE_ENV=development
    networks:
      - nodejs-network
  authentication:
    build:
      context: ../nodejs-authentication
      dockerfile: Dockerfile
    image: nodejs-authentication
    container_name: nodejs-authentication
    command: npm start
    volumes:
      - ../nodejs-authentication:/usr/src/app
      - /usr/src/app/node_modules
    depends_on:
      - mysql
    ports:
      - "4001:4001"
    env_file: ../nodejs-authentication/.env
    environment:
      - NODE_ENV=development
    networks:
      - nodejs-network
  mysql:
    image: mysql:5.7
    command: --default-authentication-plugin=mysql_native_password
    command: --innodb-use-native-aio=0
    command: --explicit_defaults_for_timestamp
    volumes:
      - mysqldata:/var/lib/MySQL
    restart: always
    env_file: ./.env
    environment:
      MYSQL_ROOT_PASSWORD: "${MYSQL_DB_PASSWORD}"
      MYSQL_DATABASE: "${MYSQL_DB_NAME}"
      MYSQL_USER: "${MYSQL_DB_USER}"
      MYSQL_PASSWORD: "${MYSQL_DB_PASSWORD}"
    container_name: mysql
    ports:
      - "3307:3306"
    networks:
      - nodejs-network

networks:
    nodejs-network:
      driver: bridge
      ipam:
       config:
         - subnet: 10.5.0.0/16
           gateway: 10.5.0.1

volumes:
    mysqldata:
    data-volume:
    node_modules:
    web-root:
      driver: local
